import { storage } from "wxt/storage";
import Icon from "@/public/icon/16.png";
import { BECH32_REGEX } from "nostr-tools/nip19";
import { nip19 } from "nostr-tools";
export default defineContentScript({
  matches: ["<all_urls>"],
  runAt: "document_start",
  main(ctx) {
    const hexRegex = /^[0-9a-fA-F]{64}$/;
    console.log("test");
    let decodedata: nip19.DecodeResult;
    let noteEncode: string;
    let neventEncode: string;
    let naddrEncode: any;
    let nrelayEncode: string;
    let nprofileEncode: string;
    let npubEncode: string;
    document.addEventListener("mouseup", async (e) => {
      const targetElement = e.target as HTMLElement;
      if (
        targetElement.id === "menuButton" ||
        targetElement.closest("#menuButton")
      ) {
        return;
      }

      const selectedText = window?.getSelection()?.toString().trim();
      if (
        selectedText &&
        selectedText.length >= 63 &&
        (BECH32_REGEX.test(selectedText) || hexRegex.test(selectedText))
      ) {
        try {
          //デコードできるってことは入力がエンコード済みのもの。
          decodedata = nip19.decode(selectedText);
          npubEncode = "";
          noteEncode = "";
          neventEncode = "";
          //naddrEncode=nip19.naddrEncode({
          //  pubkey: selectedText,
          //   identifier: "",
          //   kind: 0
          //  })
          nrelayEncode = "";
          nprofileEncode = "";
        } catch (error) {
          //デコードできないからヘックスってこと。
          //decodedata = nip19.encode(selectedText);}

          npubEncode = nip19.npubEncode(selectedText);
          noteEncode = nip19.noteEncode(selectedText);
          neventEncode = nip19.neventEncode({ id: selectedText });
          //naddrEncode=nip19.naddrEncode({
          //  pubkey: selectedText,
          //   identifier: "",
          //   kind: 0
          //  })
          nrelayEncode = nip19.nrelayEncode(selectedText);
          nprofileEncode = nip19.nprofileEncode({ pubkey: selectedText });
        }
        const selectRect = window
          ?.getSelection()
          ?.getRangeAt(0)
          .getBoundingClientRect();
        if (!selectRect) return;

        const menu = document.createElement("div");
        menu.id = "selectionMenu";
        menu.style.position = "absolute";
        menu.style.top = `${e.clientY + window.scrollY + 20}px`;
        menu.style.left = `${e.clientX + window.scrollX + 10}px`;
        menu.innerHTML = `<button id="menuButton"><img src="${Icon}" alt="Translate"></button>`;
        document.body.appendChild(menu);

        document.getElementById("menuButton")?.addEventListener("click", () => {
          const overlay = document.createElement("div");
          overlay.id = "translateOverlay";
          overlay.style.position = "fixed";
          overlay.style.top = "50%";
          overlay.style.left = "50%";
          overlay.style.transform = "translate(-50%, -50%)";
          overlay.style.background = "white";
          overlay.style.border = "1px solid black";
          overlay.style.padding = "20px";
          overlay.style.zIndex = "1000";
          overlay.innerHTML = `
            <div>
              <h2>selected: ${selectedText}</h2>
              <p>decode type: ${decodedata?.type}</p><p>decode data: ${decodedata?.data}</p>
              <p>${noteEncode}</p>
              <p>${neventEncode}</p>
              <p>${naddrEncode}</p>
              <p>${nrelayEncode}</p>
              <p>${nprofileEncode}</p>
              <p>${npubEncode}</p>
              <button id="closeOverlay">Close</button>
            </div>
          `;
          document.body.appendChild(overlay);

          document
            .getElementById("closeOverlay")
            ?.addEventListener("click", () => {
              overlay.remove();
            });
        });
      }
    });

    document.addEventListener("mousedown", function (event) {
      const menu = document.getElementById("selectionMenu");
      if (menu && !menu.contains(event.target as Node | null)) {
        menu.remove();
      }
    });

    document.addEventListener("mousedown", function (event) {
      const overlay = document.getElementById("translateOverlay");
      if (overlay && !overlay.contains(event.target as Node | null)) {
        overlay.remove();
      }
    });
  },
});
